[{"title":"要用面值 50、20、10、5 和 1 元的钱凑成给定数目的钱，如何凑可以使钱的张数最少","url":"/posts/38499/","content":"\n#include<iostream>\nusing namespace std;\nint main()\n{\n\tint n;\n\tcout << \"请输入金额\";\n\tcin >> n;\n\tcout << n << \"元钱张数最少的方法\" << endl;\n\tcout << n / 50 << \"张50元\" << endl;\n\tcout << n % 50 / 20 << \"张20元\" << endl;\n\tcout << n % 50 % 20 / 10 << \"张10元\" << endl;\n\tcout << n % 50 % 20 % 10 / 5 << \"张5元\" << endl;\n\tcout << n % 50 % 20 % 10 % 5 << \"张1元\" << endl;\n\tsystem(\"pause\");\n\treturn 0;\n}","categories":["C++"],"tags":["算法"]},{"title":"Hello World","url":"/posts/16107/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","categories":[],"tags":[]},{"title":"Hexo 主题 Mustom 使用指南（对应主题 1.0 版）","url":"/posts/55821/","content":"- 本主题[Mustom](//github.com/jinyaoMa/hexo-theme-mustom)是我参考了卡片式和窗口展示的样式设计的Hexo主题。\n- 本主题通过大量的replaceWith函数和PJAX来加载，而且用了Live2D的插件，初始加载时回流特别厉害。\n- 本主题可以衍生一个CSS的框架，但是作者本人目前还是在给每个组件都弄一个单独的样式表。\n- 本主题把各类资源文件都分门别类了，在以后添加内容方面应该还是较方便的。\n\n<!-- more -->\n\n# Hexo根目录结构\n\n**注：主题文件可以下载[本站](//github.com/jinyaoMa/ma-jinyao.cn)所有源代码后，通过复制粘贴`themes/mustom`文件夹获得，或者下载[Mustom](//github.com/jinyaoMa/hexo-theme-mustom)所有源代码获得**\n**注：以下文件及文件夹都是使用Mustom主题必要的结构**\n\n先来看看[本站](//github.com/jinyaoMa/ma-jinyao.cn)的根目录结构。\n\n```\n├─scaffolds    : 模板\n├─source       : 内容资源文件夹\n├─themes       : 下载的主题放这里\n├─package.json : 里面可以看我都用了什么没有魔改过的Hexo插件\n├─_config.yml  : 根配置文件\n```\n\n这就是一个普通Hexo建站的初始结构。这里主要讲下，**使用我的Mustom主题时，可以使用`scaffolds`里我的模板，里面包含了必要的front-matter变量。可以复制粘贴整个`scaffolds`文件去覆盖原本的文件夹。推荐按照[本站](//github.com/jinyaoMa/ma-jinyao.cn)里的`package.json`来安装依赖，因为基本上安装的依赖都是用于优化和兼容。可以复制粘贴本站的`package.json`去替换原本的文件，之后运行命令`npm i`安装依赖。之后所有的例子默认都使用了我的模板和依赖之后的操作。**\n\n# _config.yml根配置文件\n\n**注：使用本主题的你可以在上面添加变量和修改变量的值，但是最好不要删除某一个变量，你可以留个空字符串**\n**可以在复制粘贴以下配置之后，通过网站效果慢慢改**\n\n``` yml\n# Hexo Configuration\n## Docs: https://hexo.io/docs/configuration.html\n## Source: https://github.com/hexojs/hexo/\n\n# Site\ntitle: \"耀 の 个人网站 | Mark の Personal Website\"\ndescription: \"耀の个人网站, 耀的个人网站, Mark の Personal Website, Mark's Personal Website, 耀的部落阁, 耀の部落阁, jinyaoMa, Mustom, Hexo\"\nauthor: jinyaoMa ( 耀 / Mark )\nyear: 2019 # 建站年\n\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: https://ma-jinyao.cn\nroot: /\n\n# Directory\nsource_dir: source\npublic_dir: docs # 方便使用Github Page\ntag_dir: tags\narchive_dir: archives\ncategory_dir: categories\ncode_dir: code # markdown使用include_code标签\nskip_render:\n  - \"code/*.*\" # 排除code_dir\n  - \"extension/**/*.html\" # 排除extension\n  - \"*.html\" # 如果在在主目录source文件夹里放了搜索引擎验证的.html文件\n  - \"CNAME\" # 如果在在主目录source文件夹里放了CNAME文件\n\n# Writing\nnew_post_name: :title.md # File name of new posts\ndefault_layout: post\ntitlecase: false # Transform title into titlecase\nexternal_link:\n  enable: true # Open external links in new tab\n  field: site # Apply to the whole site\n  exclude: \"\"\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: false\nrelative_link: false\nfuture: true\nhighlight:\n  enable: true\n  line_number: true\n  auto_detect: false\n  tab_replace: \"  \"\n  wrap: true\n  hljs: false\n\n# Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: YYYY-MM-DD\ntime_format: HH:mm:ss\n## Use post's date for updated date unless set in front-matter\nuse_date_for_updated: false\n\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: mustom\n\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  - type: baidu_url_submitter\n  - type: git\n    repo:\n\nall_minifier: true # 如果装了 hexo-all-minifier\nmarkdown: # 如果换了原装 hexo-renderer-marked, 用了 hexo-renderer-markdown-it\n  render:\n    html: true\n    xhtmlOut: false\n    breaks: true\n    linkify: true\n    typographer: true\n    quotes: '“”‘’'\n  plugins:\n    - markdown-it-abbr\n    - markdown-it-footnote\n    - markdown-it-ins\n    - markdown-it-sub\n    - markdown-it-sup\n  anchors:\n    level: 1\n    collisionSuffix: 'v'\n    permalink: true\n    permalinkClass: headerlink\n    permalinkSide: 'left'\n    permalinkSymbol: ''\nnofollow: # 如果装了 hexo-filter-nofollow\n  enable: true\n  field: post\nsitemap: # 如果装了 hexo-generator-sitemap\n  path: sitemap.xml\n  rel: true\nautoprefixer: # 如果装了 hexo-autoprefixer\n  exclude:\n    - \"*.min.css\"\n  overrideBrowserslist:\n    - \"last 2 versions\"\nbabelify: # 如果装了 hexo-renderer-babelify + @babel/preset-env\n  presets:\n    - \"@babel/preset-env\"\n  sourceMaps: false\nmathjax: # 如果装了 hexo-filter-mathjax\n  tags: none # or 'ams' or 'all'\n  single_dollars: true # enable single dollar signs as in-line math delimiters\n  cjk_width: 0.9 # relative CJK char width\n  normal_width: 0.6 # relative normal (monospace) width\n\nignore:\n  - \"**/source/asset/js/common/*.js\" # 如果装了 hexo-renderer-babelify\n  - \"**/source/asset/js/part/*.js\" # 如果装了 hexo-renderer-babelify\n  - \"**/source/asset/js/plugin/!(L2Dwidget.0.min.js)\" # 如果装了 hexo-renderer-babelify\n\n# 百度主动推送\nbaidu_url_submit:\n  count: 1000 # 提交最新的一个链接\n  host: ma-jinyao.cn # 在百度站长平台中注册的域名\n  token: \"\" # 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!\n  path: baidu_urls.txt # 文本文档的地址， 新链接会保存在此文本文档里\n\nbaidu_translate: # 用于划词翻译组件\n  appid: \"\"\n  appkey: \"\"\n\nvaline: # 用于评论组件\n  appid: \"\"\n  appkey: \"\"\n\n# 搜索引擎验证\ngoogle_site_verification: \"\"\nbaidu_site_verification: \"\"\n```\n\n# themes/mustom目录结构\n\n接下来看看[themes/mustom](//github.com/jinyaoMa/ma-jinyao.cn/tree/master/themes/mustom)的目录结构。\n\n```\n├─_config.yml : 主题配置文件，改菜单、改图标、改皮肤、改音乐/一言组件配置、新增组件时涉及\n├─source : 主题资源文件夹\n|   ├─browser.ejs : 不用babelify时旧浏览器会重定向到这个页面\n|   ├─robots.txt\n|   ├─sw.tpl : pwa需要加载的service worker模板\n|   ├─asset\n|   |   ├─part : 所有组件模板文件放这\n|   |   |  ├─audioplayer.ejs\n|   |   |  ├─brand.ejs\n|   |   |  ├─codelib.ejs\n|   |   |  ├─comment.ejs\n|   |   |  ├─extension.ejs\n|   |   |  ├─footer.ejs\n|   |   |  ├─gallery.ejs\n|   |   |  ├─goingto.ejs\n|   |   |  ├─hitokoto.ejs\n|   |   |  ├─menus.ejs\n|   |   |  ├─page.ejs\n|   |   |  ├─panels.ejs\n|   |   |  ├─pather.ejs\n|   |   |  ├─post.ejs\n|   |   |  ├─recentposts.ejs\n|   |   |  ├─records.ejs\n|   |   |  ├─search.ejs\n|   |   |  ├─settings.ejs\n|   |   |  ├─sitename.ejs\n|   |   |  ├─skin.ejs\n|   |   |  ├─timeline.ejs\n|   |   |  ├─toc.ejs\n|   |   |  ├─translater.ejs\n|   |   |  ├─xaside.ejs\n|   |   |  ├─xcanvas.ejs\n|   |   |  ├─xdrawer.ejs\n|   |   |  └xsearch.ejs\n|   |   ├─live2d : Live2D的文件放这\n|   |   |   ├─haruto.model.json\n|   |   |   ├─haruto.physics.json\n|   |   |   ├─mtn\n|   |   |   |  ├─01.mtn\n|   |   |   |  ├─02.mtn\n|   |   |   |  ├─03.mtn\n|   |   |   |  ├─04.mtn\n|   |   |   |  ├─05.mtn\n|   |   |   |  ├─06.mtn\n|   |   |   |  ├─07.mtn\n|   |   |   |  ├─08.mtn\n|   |   |   |  ├─09.mtn\n|   |   |   |  └idle_02.mtn\n|   |   |   ├─moc\n|   |   |   |  ├─haruto.moc\n|   |   |   |  ├─haruto.2048\n|   |   |   |  |      └texture_00.png\n|   |   ├─lang : 所有的语言界面资源文件放这\n|   |   |  ├─en.yml : 英文\n|   |   |  └zh-cn.yml : 中文\n|   |   ├─js : 所有的JS资源文件放这\n|   |   | ├─main.js : 管理所有资源的加载和程序\n|   |   | ├─nomodule.js : 不使用babelify时用得到的旧浏览器重定向\n|   |   | ├─plugin : 所有第三方JS插件模块\n|   |   | |   ├─APlayer.min.js\n|   |   | |   ├─av-min.js\n|   |   | |   ├─evanyou.js\n|   |   | |   ├─L2Dwidget.0.min.js\n|   |   | |   ├─L2Dwidget.min.js\n|   |   | |   ├─md5.min.js\n|   |   | |   ├─Meting.min.js\n|   |   | |   ├─socialShare.min.js\n|   |   | |   └Valine.min.js\n|   |   | ├─part : 所有组件加载必要的模块\n|   |   | |  ├─audioplayer.js\n|   |   | |  ├─brand.js\n|   |   | |  ├─codelib.js\n|   |   | |  ├─comment.js\n|   |   | |  ├─extension.js\n|   |   | |  ├─footer.js\n|   |   | |  ├─gallery.js\n|   |   | |  ├─goingto.js\n|   |   | |  ├─hitokoto.js\n|   |   | |  ├─menus.js\n|   |   | |  ├─page.js\n|   |   | |  ├─panels.js\n|   |   | |  ├─pather.js\n|   |   | |  ├─post.js\n|   |   | |  ├─recentposts.js\n|   |   | |  ├─records.js\n|   |   | |  ├─search.js\n|   |   | |  ├─settings.js\n|   |   | |  ├─sitename.js\n|   |   | |  ├─skin.js\n|   |   | |  ├─timeline.js\n|   |   | |  ├─toc.js\n|   |   | |  ├─translater.js\n|   |   | |  ├─xaside.js\n|   |   | |  ├─xcanvas.js\n|   |   | |  ├─xdrawer.js\n|   |   | |  └xsearch.js\n|   |   | ├─common : 包含所有通用JS函数\n|   |   | |   ├─ajax.js\n|   |   | |   ├─api.js\n|   |   | |   ├─config.js\n|   |   | |   ├─fetch.js\n|   |   | |   ├─lang.js\n|   |   | |   ├─part.js\n|   |   | |   ├─storage.js\n|   |   | |   └util.js\n|   |   ├─img : 所有的固定图像资源文件放这\n|   |   |  ├─android-chrome-192x192.png\n|   |   |  ├─android-chrome-512x512.png\n|   |   |  ├─author.large.png\n|   |   |  ├─author.medium.png\n|   |   |  ├─author.small.png\n|   |   |  ├─by-nc-sa.svg\n|   |   |  ├─icon.large.png\n|   |   |  ├─icon.medium.png\n|   |   |  ├─icon.small.png\n|   |   |  ├─qf3cu.huaji.png\n|   |   |  ├─qf3cu.jpg\n|   |   |  ├─qf3cu.png\n|   |   |  ├─qf3cu.temp.bw.png\n|   |   |  ├─qf3cu.temp.png\n|   |   |  ├─qq.png\n|   |   |  ├─start.png\n|   |   |  ├─start.reverse.png\n|   |   |  └wechat.png\n|   |   ├─font : 所有的字体文件放这\n|   |   |  ├─fa-brands-400.eot\n|   |   |  ├─fa-brands-400.svg\n|   |   |  ├─fa-brands-400.ttf\n|   |   |  ├─fa-brands-400.woff\n|   |   |  ├─fa-brands-400.woff2\n|   |   |  ├─fa-regular-400.eot\n|   |   |  ├─fa-regular-400.svg\n|   |   |  ├─fa-regular-400.ttf\n|   |   |  ├─fa-regular-400.woff\n|   |   |  ├─fa-regular-400.woff2\n|   |   |  ├─fa-solid-900.eot\n|   |   |  ├─fa-solid-900.svg\n|   |   |  ├─fa-solid-900.ttf\n|   |   |  ├─fa-solid-900.woff\n|   |   |  ├─fa-solid-900.woff2\n|   |   |  ├─iconfont.eot\n|   |   |  ├─iconfont.svg\n|   |   |  ├─iconfont.ttf\n|   |   |  ├─iconfont.woff\n|   |   |  └SourceHanSansCN.otf\n|   |   ├─css : 所有的样式文件放这\n|   |   |  ├─style.styl : 引用了所有的样式\n|   |   |  ├─_plugin : 所有第三方样式插件\n|   |   |  |    ├─APlayer.min.css\n|   |   |  |    ├─fontawesome.min.css\n|   |   |  |    ├─github-markdown.min.css\n|   |   |  |    ├─highlight.styl\n|   |   |  |    └share.min.css\n|   |   |  ├─_part : 所有组件样式\n|   |   |  |   ├─audioplayer.styl\n|   |   |  |   ├─brand.styl\n|   |   |  |   ├─codelib.styl\n|   |   |  |   ├─comment.styl\n|   |   |  |   ├─extension.styl\n|   |   |  |   ├─footer.styl\n|   |   |  |   ├─gallery.styl\n|   |   |  |   ├─goingto.styl\n|   |   |  |   ├─hitokoto.styl\n|   |   |  |   ├─menus.styl\n|   |   |  |   ├─page.styl\n|   |   |  |   ├─panels.styl\n|   |   |  |   ├─pather.styl\n|   |   |  |   ├─post.styl\n|   |   |  |   ├─recentposts.styl\n|   |   |  |   ├─records.styl\n|   |   |  |   ├─search.styl\n|   |   |  |   ├─settings.styl\n|   |   |  |   ├─sitename.styl\n|   |   |  |   ├─skin.styl\n|   |   |  |   ├─timeline.styl\n|   |   |  |   ├─toc.styl\n|   |   |  |   ├─translater.styl\n|   |   |  |   ├─xaside.styl\n|   |   |  |   ├─xcanvas.styl\n|   |   |  |   ├─xdrawer.styl\n|   |   |  |   └xsearch.styl\n|   |   |  ├─_common : 包含所有页面的通用样式\n|   |   |  |    ├─color.styl : 所有的受皮肤影响的颜色配置\n|   |   |  |    ├─dimension.styl : 所有的固定距离、固定值等配置\n|   |   |  |    └layout.styl : 所有页面通用样式，主要包含“m-”开头的主模板样式\n├─scripts : 主题预处理脚本文件夹\n|    ├─$filter.js\n|    ├─$helper.js\n|    ├─$renderer.js\n|    ├─renderer\n|    |    ├─$partplus.js\n|    |    └$template.js\n|    ├─plugin : 放改过的预处理时用到的第三方插件\n|    |   ├─pangunode.js\n|    |   ├─toc.js\n|    |   ├─hexo-generator-restful\n|    |   |           ├─index.js\n|    |   |           ├─lib\n|    |   |           |  └generator.js\n|    |   ├─hexo-abbrlink\n|    |   |       ├─index.js\n|    |   |       ├─lib\n|    |   |       |  ├─crc16.js\n|    |   |       |  ├─crc32.js\n|    |   |       |  ├─logic.js\n|    |   |       |  └model.js\n|    ├─helper : 放预处理渲染生成期间用到的函数\n|    |   ├─$count.js\n|    |   ├─$css.js\n|    |   ├─$encode.js\n|    |   ├─$forIn.js\n|    |   ├─$gallery.js\n|    |   ├─$js.js\n|    |   ├─$min2read.js\n|    |   ├─$mjs.js\n|    |   ├─$nomjs.js\n|    |   ├─$word4post.js\n|    |   └$word4site.js\n├─layout : 主题预处理页面模板文件夹\n|   ├─archive.ejs : 管理所有归档页面头部涉及的数据\n|   ├─index.ejs : 管理首页面头部涉及的数据\n|   ├─page.ejs : 管理所有单独页面头部涉及的数据\n|   ├─post.ejs : 管理所有文章页面头部涉及的数据\n|   ├─_partial\n|   |    └frame.ejs : 网页模板，增减改组件和修改头部模板时涉及\n```\n\n## 普通使用主题时涉及的文件及文件夹\n\n```\n├─_config.yml : 主题配置文件，改菜单、改图标、改皮肤、改音乐/一言组件配置、新增组件时涉及\n├─source : 主题资源文件夹\n|   ├─asset\n|   |   ├─part : 所有组件模板文件放这\n|   |   ├─lang : 所有的语言界面资源文件放这\n|   |   |  ├─en.yml : 英文\n|   |   |  └zh-cn.yml : 中文\n|   |   ├─js : 所有的JS资源文件放这\n|   |   | ├─main.js : 管理所有资源的加载和程序\n|   |   | ├─part : 所有组件加载必要的模块\n|   |   ├─css : 所有的样式文件放这\n|   |   |  ├─style.styl : 引用了所有的样式\n|   |   |  ├─_part : 所有组件样式\n├─layout : 主题预处理页面模板文件夹\n|   ├─_partial\n|   |    └frame.ejs : 网页模板，增减改组件和修改头部模板时涉及\n```\n\n# source目录结构\n\n再来看看[source](//github.com/jinyaoMa/ma-jinyao.cn/tree/master/source)的目录结构。\n\n```\n├─CNAME : 锁定github pages域名定向\n├─_posts : 所有的文章\n|   ├─Gallery-Post-Not-Supported.md\n|   ├─Hello-Hexo.md\n|   ├─Helpful-Links.md\n|   ├─HTTP是什么？.md\n|   ├─Markdown-Basic-Syntax.md\n|   ├─Oracle-SQL-Basic-Usage.md\n|   ├─TCP-IP是什么？.md\n|   ├─主题hexo-theme-mustom使用指南.md\n|   ├─旧版日记仿markdown编译代码.md\n|   ├─测试区2048JS代码.md\n|   └网易云音乐歌单JS音乐播放器JS代码.md\n├─resume : 这是个“简历小贴士”单页面\n|   └index.md\n├─records : 这是个“记录”单页面\n|    ├─content.yml : 记录组件加载时从这里读取数据\n|    └index.md\n├─library : 这是个“代码库”单页面\n|    └index.md\n├─letter : 这是个“求职信小贴士”单页面\n|   └index.md\n├─gallery : 这是个“图库”单页面\n|    ├─FaceQ1583444636773.png\n|    ├─http-request-example.jpg\n|    ├─http-request-format.png\n|    ├─http-response-example.jpg\n|    ├─http-response-format.png\n|    ├─index.md\n|    ├─tcp-ip-ipv6-prefix.jpg\n|    ├─tcp-ip-router-network.jpg\n|    ├─tcp-ip-router-subnet.jpg\n|    ├─wallpaper-2311325.jpg\n|    ├─wallpaper-2572384.jpg\n|    ├─wallpaper-878514.jpg\n|    ├─yao2048-0.jpg\n|    └yaoplayer-0.jpg\n├─extension : 这个是本站左下角的扩展功能\n|     ├─content.yml : 扩展组件加载时从这里读取数据\n|     ├─test : “测试”扩展\n|     ├─resume : “简历生成”扩展\n|     ├─palette : “图像颜色提取”扩展\n|     ├─letter : “求职信”扩展\n├─code : 所有使用Hexo标签“include_code”的代码文件都放这\n├─about : 这是个“关于”单页面\n|   └index.md\n```\n\n# 新建单页面例子\n\n**注：需要我的scaffolds/page.md模板为前提**\n\n假如我要新建一个“友链”单页面，我需要运行新建命令：\n\n``` bash\nhexo new page \"links\"\n```\n\n运行命令后得到以下新目录结构\n\n```\n├─_posts\n├─resume\n├─records\n├─links : 新“友链”单页面\n|   └index.md : 模板生成的index.md\n├─library\n├─letter\n├─gallery\n├─extension\n├─code\n├─about\n```\n\n如何修改`links/index.md`可以参考[about/index.md](//raw.githubusercontent.com/jinyaoMa/ma-jinyao.cn/master/source/about/index.md)\n\n## 添加菜单项目\n\n在主题配置`_config.yml`中，按格式新增`menus`下的项目\n\n``` yml\nmenus:\n  main: # 项目组\n    home: # 项目\n      url: / # 项目链接\n      icon: '<i class=\"fas fa-home fa-fw\"></i>' # 项目图标\n    archive: # 项目\n      url: /archives/ # 项目链接\n      icon: '<i class=\"fas fa-archive fa-fw\"></i>' # 项目图标\n    about: # 项目\n      url: /about/ # 项目链接\n      icon: '<i class=\"fas fa-user fa-fw\"></i>' # 项目图标\n    links: # 新项目 <----------------------------------------------------\n      url: /links/  # 新项目链接 <----------------------------------------\n      icon: '<i class=\"fas fa-link fa-fw\"></i>' # 新项目图标 <------------\n```\n\n接下来，在主题`source/asset/lang`文件夹中的`.yml`语言文件新增`menus`下的项目\n\n``` yml\nmenus:\n  main: # 对应_config.yml中的项目组\n    caption: 本站 # 项目组名称\n    items: # 对应_config.yml中的项目\n      home: 首页 # 项目名称\n      archive: 归档 # 项目名称\n      about: 关于 # 项目名称\n      links: 友链 # 新项目名称 <-----------------------------------------\n```\n\n# 新建文章例子\n\n**注：需要我的scaffolds/post.md模板为前提**\n\n假如我要新建一个“HTTP是什么？”文章，我需要运行新建命令：\n\n``` bash\nhexo new \"HTTP是什么？\"\n```\n\n运行命令后得到以下新目录结构\n\n```\n├─_posts\n|   └HTTP是什么？.md : 新“HTTP是什么？”文章\n├─resume\n├─records\n├─links\n├─library\n├─letter\n├─gallery\n├─extension\n├─code\n├─about\n```\n\n打开`HTTP是什么？.md`，可以看到front-matter中没有abbrlink，没有关系，这是自动生成。**如果文章里使用了MathJax，需要设置`mathjax: true`。**\n\n``` yml\n---\ntitle: HTTP是什么？\ncategories:\n  - - null # 分类设置\ntags:\n  - null # 标签设置\nmathjax: false\ndate: 2020-04-10 14:15:34\nupdated: 2020-04-10 14:15:34\n---\n```\n\n# 添加组件例子\n\n假如我要在“友链”单页面里添加一个像\"记录\"单页面下的记录组件，命名为`links`组件：\n\n**首先，在Hexo根目录下`source/links`文件夹建立一个`content.yml`用以记录友链，里面的内容可以是这样的：**\n\n``` yml source/links/content.yml\n# 友链模板\n- name: jinyaoMa\n  site: //ma-jinyao.cn\n  avatar: //ma-jinyao.cn/asset/img/author.medium.png\n# 其他友链\n- name: Test\n  site: //baidu.com\n  avatar: \"\"\n\n# ...以此类推\n```\n\n**然后，在主题目录`themes/mustom`新建和修改以下必要的文件：**\n\n```\n├─_config.yml : 添加需要的图标\n├─source\n|   ├─asset\n|   |   ├─part\n|   |   |  └links.ejs : 必要“组件模板”\n|   |   ├─lang\n|   |   |  ├─en.yml : 添加需要的英文文本\n|   |   |  └zh-cn.yml : 添加需要的中文文本\n|   |   ├─js\n|   |   | ├─part\n|   |   | |  └links.js : 必要“JS加载模块”\n|   |   ├─css\n|   |   |  ├─_part\n|   |   |  |   └links.styl : 必要“组件样式”\n```\n\n`links.ejs`：可以参照[asset/part/records.ejs](//raw.githubusercontent.com/jinyaoMa/ma-jinyao.cn/master/themes/mustom/source/asset/part/records.ejs)组件模板，刚开始可以只有以下部分：\n\n``` html asset/part/links.ejs\n<div class=\"p-links\"><!-- 注意类名 -->\n  <div class=\"p-links-caption\"><!-- 窗口标题部分 -->\n    <%- theme.links.icon %><!-- 窗口标题图标 -->\n    <span data-lang=\"links.caption\"><!-- 加载语言文件中links.caption的字符串 --></span>\n  </div>\n<div>\n```\n\n在`_config.yml`中添加以下代码：\n\n``` yml\nlinks:\n  icon: '<i class=\"fas fa-link fa-fw\"></i>'\n```\n\n在`en.yml`和`zh-cn.yml`中添加以下代码：\n\n``` yml en.yml\nlinks:\n  caption: LINKS\n```\n\n``` yml zh-cn.yml\nlinks:\n  caption: 友链\n```\n\n`links.js`：可以参照[asset/js/part/records.js](//raw.githubusercontent.com/jinyaoMa/ma-jinyao.cn/master/themes/mustom/source/asset/js/part/records.js)加载模块，刚开始可以只有以下部分：\n\n``` js asset/js/part/links.js\nimport part from \"../common/part.js\";\nlet tag = 'links'; // 注意标签名\nlet element = null;\nconst init = (params, callback) => {\n  part(tag, el => {\n    element = el;\n    document.querySelector(tag).replaceWith(element);\n    callback && callback(element);\n  });\n};\nexport default {\n  tag,\n  init\n};\n```\n\n`links.styl`：可以参照[asset/css/_part/records.styl](//raw.githubusercontent.com/jinyaoMa/ma-jinyao.cn/master/themes/mustom/source/asset/css/_part/records.styl)组件样式，刚开始可以什么样式都没有。\n\n**完成必要文件的新建之后，就要把这个组件加载到页面上，需要修改一下文件：**\n\n在Hexo根目录`source/links/index.md`里面的front-matter中标记这个组件。\n\n``` yml source/links/index.md\n---\ntitle: links\nlayout: page\nname: links\nparts: \n  - page\n  - links # 标记组件\n---\n```\n\n在`themes/mustom`主题目录中`source/asset/css/style.styl`引用`links.styl`。\n\n``` styl \n// 文件末尾添加\n@import '_part/links'\n```\n\n在`themes/mustom`主题目录中`source/asset/js/main.js`对号插入以下代码：\n\n``` js\n// 头部所有import下面\nimport links from './part/links.js';\n\n/* Ctrl+F 查找 “Extra Operations”，在“Extra Operations”下添加代码加载组件到“links”单页面 */\n// Extra Operations\nif (/^\\/(links)\\//.test(pathname())) {\n  ajax({\n    url: `/links/content.json`, // content.yml 预编译成的JSON文件，友链的记录文件\n    method: 'get',\n    dataType: 'json',\n    success(data) {\n      parts.includes('links') && links.init({\n        data\n      }, el => {\n        checklist.links = true;\n        progress.step(stepping);\n      });\n    }\n  });\n}\n```\n\n在`themes/mustom`主题目录中`layout/_partial/frame.ejs`中`div.m-content`插入组件标签`<links></links>`。\n\n**通过以上步骤就能把组件添加到单页面“友链”中**\n\n# 删除单页面组件\n\n想要停用某个单页面组件只要在单页面所属`source/YourPage/index.md`里面的front-matter中注释掉组件标记即可，例如：\n\n``` yml\n---\ntitle: links\nlayout: page\nname: links\nparts: \n  - page\n  # - links # 注释掉组件标记\n---\n```\n\n**_我这个主题所用技术都是比较野生和混杂，不懂可以Github Issue我，也可以百度。自己研究一下熟悉之后就简单了，因为来来去去也就几个地方，只是代码分得较细，改动过程鼠标可能比较累。_**","categories":["Hexo"],"tags":["Mustom"]},{"title":"12","url":"/posts/54465/","content":"","categories":["Linux"],"tags":["基础知识"]}]