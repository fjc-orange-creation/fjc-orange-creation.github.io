[{"title":"day9","url":"/posts/16207/","content":"# ![image.png](https://cdn.nlark.com/yuque/0/2020/png/500370/1596676687838-a406f714-246d-4d85-a6da-53d4fd72e0ce.png#height=337&id=dzqQ6&margin=%5Bobject%20Object%5D&name=image.png&originHeight=620&originWidth=1227&originalType=binary&ratio=1&size=51043&status=done&style=none&width=667)\n# AS\n\n- AS：autonomous system自治系统\n- 不同AS通过AS号区分，AS号的范围是1-65525，其中64512-65535是私有AS号。IANA负责AS号的划分\n- 中国电信163AS号：4134\n- 中国电信CN2AS号：4809\n- 中国网通AS号：9929\n# IGP\n\n- 内部网关协议\n- 执行拓扑发现\n- 尽力完成快速收敛\n- 需要周期性的更新来确保路由信息选择的精确性\n- 受同一个管理机构的控制\n- 采取了共同的路由选择策略\n- 提供了优先的策略控制能力\n# EGP\n\n- 外部网关协议\n- 早期有一个协议的名称就叫做EGP，后来被BGP取代\n# BGP\n\n- 边界网关路由协议（路径矢量）\n- 主要作用是在AS之间传递路由信息\n- 目前主要版本是有四个：v1，v2，v3，v4\n- 为什么使用BGP\n   - 大量路由需要承载，IGP只能容纳千条，BGP可以容纳上万条\n   - 支持vpn\n   - 策略能力强，可以实现路由决策与数据控制\n- BGP使用TCP为传输层协议，TCP端口号为179\n- BGP路由器之间建立TCP连接，这些路由器称为BGP对等体，也叫BGP邻居：EBGP，IBGP\n- 对等体之间交换整个bgp路由表\n- BGP路由器只发送增量更新或者触发更新（不会周期更新）\n- 具有丰富的路径属性\n- BGP通告成千上万的路由，可采用TCP滑动窗口的机制，停止并等待确认前，可以发送65576个字节\n# 拓扑\n                    ![image.png](https://cdn.nlark.com/yuque/0/2020/png/500370/1596678534363-3f73a9e9-128d-4038-bbe9-a9ab4d4eba94.png#height=204&id=WQ6uw&margin=%5Bobject%20Object%5D&name=image.png&originHeight=300&originWidth=884&originalType=binary&ratio=1&size=36727&status=done&style=none&width=602)\n### 基础配置\n```html\nR1#sh run | sec int\ninterface Loopback0\n ip address 1.1.1.1 255.255.255.0\ninterface Ethernet0/0\n ip address 192.168.12.1 255.255.255.0\n=========================================\nR2#sh run | sec int\nmmi polling-interval 60\ninterface Loopback0\n ip address 2.2.2.2 255.255.255.0\n ip ospf 1 area 0\ninterface Ethernet0/0\n ip address 192.168.12.2 255.255.255.0\ninterface Ethernet0/1\n ip address 192.168.23.2 255.255.255.0\n ip ospf 1 area 0\ninterface Ethernet0/2\n ip address 192.168.24.2 255.255.255.0\n ip ospf 1 area 0\n=========================================\nR3#sh run | sec int\ninterface Loopback0\n ip address 3.3.3.3 255.255.255.0\n ip ospf 1 area 0\ninterface Ethernet0/0\n ip address 192.168.23.3 255.255.255.0\n ip ospf 1 area 0\ninterface Ethernet0/1\n ip address 192.168.35.3 255.255.255.0\n ip ospf 1 area 0\n=========================================\nR4#sh run | sec int\ninterface Loopback0\n ip address 4.4.4.4 255.255.255.0\n ip ospf 1 area 0\ninterface Ethernet0/0\n ip address 192.168.24.4 255.255.255.0\n ip ospf 1 area 0\ninterface Ethernet0/1\n ip address 192.168.45.4 255.255.255.0\n ip ospf 1 area 0\n=========================================\nR5#sh run | sec int\ninterface Loopback0\n ip address 5.5.5.5 255.255.255.0\n ip ospf 1 area 0\ninterface Ethernet0/0\n ip address 192.168.35.5 255.255.255.0\n ip ospf 1 area 0\ninterface Ethernet0/1\n ip address 192.168.45.5 255.255.255.0\n ip ospf 1 area 0\ninterface Ethernet0/2\n ip address 192.168.56.5 255.255.255.0\n=========================================\nR6#sh run | sec int\ninterface Loopback0\n ip address 6.6.6.6 255.255.255.0\ninterface Ethernet0/0\n ip address 192.168.56.6 255.255.255.0\n```\n### IBGP配置\n```html\nR2#sh run | sec bgp\nrouter bgp 200\n bgp log-neighbor-changes\t\t\t\t\t\t\t\t\t\t\t\t\t# 开启邻居辩护日志显示，默认存在\n neighbor 5.5.5.5 remote-as 200\n neighbor 5.5.5.5 update-source Loopback0\n neighbor 5.5.5.5 next-hop-self\n\nR5#sh run | sec bgp\nrouter bgp 200\n bgp log-neighbor-changes\n neighbor 2.2.2.2 remote-as 200\n neighbor 2.2.2.2 update-source Loopback0\n neighbor 2.2.2.2 next-hop-self\n\n```\n### EBGP配置\n```html\nR1#sh run | sec bgp\nrouter bgp 100\n bgp log-neighbor-changes\n network 1.1.1.0 mask 255.255.255.0\n neighbor 2.2.2.2 remote-as 200\n neighbor 2.2.2.2 ebgp-multihop 255\n neighbor 2.2.2.2 update-source Loopback0\n ip route 2.2.2.2 255.255.255.255 192.168.12.2\nR2#sh run | sec bgp\nrouter bgp 200\n bgp log-neighbor-changes\n neighbor 1.1.1.1 remote-as 100\n neighbor 1.1.1.1 ebgp-multihop 255\n neighbor 1.1.1.1 update-source Loopback0\n ip route 1.1.1.1 255.255.255.255 192.168.12.1\n =========================================\nR5#sh run | sec bgp\nrouter bgp 200\n bgp log-neighbor-changes\n neighbor 6.6.6.6 remote-as 300\n neighbor 6.6.6.6 ebgp-multihop 255\n neighbor 6.6.6.6 update-source Loopback0\n ip route 6.6.6.6 255.255.255.255 192.168.56.6\nR6#sh run | sec bgp\nrouter bgp 300\n bgp log-neighbor-changes\n network 6.6.6.0 mask 255.255.255.0\n neighbor 5.5.5.5 remote-as 200\n neighbor 5.5.5.5 ebgp-multihop 255\n neighbor 5.5.5.5 update-source Loopback0\n ip route 5.5.5.5 255.255.255.255 192.168.56.5\n```\n# BGP邻居\n\n- 运行BGP的路由器叫做BGP Speaker\n- BGP对等体也叫BGP邻居，建立基于TCP\n- IBGP\n   - 邻居和自己处于同一个AS中\n   - 通过IBGP学习到的路由管理距离为200\n   - 从IBGP学到的路由不会再传递给其他的IBGP邻居\n   - 如果开启了BGP 同步，那么没有在IGP学习到的路由，BGP也不会用\n   - IBGP邻居传递路由默认不会修改下一条地址为发出的那台路由器\n- EBGP\n   - 邻居处于不同的AS中\n   - 通过EBGP学习到的路由管理距离为20\n   - EBGP邻居为了安全烤炉，传递的数据包中TTL值默认为1\n   - EBGP邻居传递路由默认会修改下一条地址为发出的那台路由器\n# BGP消息类型\n### BGP packet\n            ![image.png](https://cdn.nlark.com/yuque/0/2020/png/500370/1596683069531-03a470f7-a81c-4478-bfce-a385f831bd99.png#height=364&id=QetT5&margin=%5Bobject%20Object%5D&name=image.png&originHeight=475&originWidth=800&originalType=binary&ratio=1&size=77872&status=done&style=none&width=613)\n### 五种报文\n| 报文名称 | 作用 | 发包时间 |\n| --- | --- | --- |\n| OPEN | 协商BGP邻居的各项参数，建立邻居关系 | 通过TCP建立BGP连接，发送OPEN |\n| UPDATE | 进行路由信息的交换 | 连接建立之后，有路由需要发送或者是路由变化，发送update通告对端的路由信息 |\n| NOTIFICATION | 报告错误，终止邻居关系 | 当BGP运行中发生错误的时候，需要发送NOTIFICATION报文通告BGP对端 |\n| KEEPALIVE | 维持邻居关系 | 定时发送KEEPALIVE保持BGP邻居关系的有效性 |\n| Route-refresh | 为保证网络稳定，触发更新路由的机制 | 当路由策略发生变化，触发请求邻居重新通告路由 |\n\n### BGP有限状态机\n| 状态名称 | 发什么包 | 功能 |\n| --- | --- | --- |\n| Idle | 尝试建立TCP | 开始准备tcp连接，监听远程peer启动tcp连接，启用bgp时需要较高的资源 |\n| Connect | 发送tcp包 | 正则进行tcp连接，如果连接时报会进入Active状态，反复尝试连接 |\n| Active | 发送tcp包 | 继续进行tcp连接 |\n| OpenSent | 发送OPEN包 | tcp连接已经完成建立，开始发送OPEN包，协商各种参数以及邻居的建立 |\n| OpenConfirm | 发送KEEPALIVE包 | 协商成功之后，进入邻居保活 |\n| Established | 发送UPDATE | 收到对方的KEEPALIVE包，性能一致，开始更新双方的路由信息 |\n\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/500370/1596684291379-1afa5934-9100-48cb-88e7-1c02a8285b78.png#height=314&id=lLOb0&margin=%5Bobject%20Object%5D&name=image.png&originHeight=475&originWidth=758&originalType=binary&ratio=1&size=156490&status=done&style=none&width=501)\n# BGP维护\n\n- 硬重置（不推荐使用）\n   - 断开所有的tcp连接以及邻居的状态\n   - 会导致断网\n   - clear ip bgp *\n- 软重置（推荐使用）\n   - 不拆除并重建TCP、BGP连接，而是仅仅触发更新的操作以便让新的路由策略生效\n   - 软重置可以针对出站、入站，也可以同时针对出站和入站\n   - clear ip bgp * soft [in | out]\n# BGP表\n```html\nR2#sh ip bgp summary \nBGP router identifier 2.2.2.2, local AS number 200\nBGP table version is 10, main routing table version 10\n2 network entries using 288 bytes of memory\n2 path entries using 168 bytes of memory\n2/2 BGP path/bestpath attribute entries using 320 bytes of memory\n2 BGP AS-PATH entries using 48 bytes of memory\n0 BGP route-map cache entries using 0 bytes of memory\n0 BGP filter-list cache entries using 0 bytes of memory\nBGP using 824 total bytes of memory\nBGP activity 5/3 prefixes, 5/3 paths, scan interval 60 secs\nNeighbor        V           AS MsgRcvd MsgSent   TblVer  InQ OutQ Up/Down  State/PfxRcd\n1.1.1.1         4          100      24      23       10    0    0 00:07:32        1\n5.5.5.5         4          200     274     280       10    0    0 03:59:34        1\nR2#\nNeighbor：邻居\nAS：邻居的AS号\nMsgRcvd：收到的消息数\n发送的消息数\nTblVer：最后一次邻居表版本号\nInQ：入站等到被处理的消息数\nOutQ：出站等待被处理的消息数\nUp/Down：显示的是建立邻居的时间，如果显示为never的化代表邻居没有建立成功\nState：当邻居成功建立进入Established状态的时候，这里显示的是路由的数目，否则就是active状态\n```\n```html\nR2#sh ip bgp\nBGP table version is 10, local router ID is 2.2.2.2\nStatus codes: s suppressed, d damped, h history, * valid, > best, i - internal, \n              r RIB-failure, S Stale, m multipath, b backup-path, f RT-Filter, \n              x best-external, a additional-path, c RIB-compressed, \n              t secondary path, \nOrigin codes: i - IGP, e - EGP, ? - incomplete\nRPKI validation codes: V valid, I invalid, N Not found\n\n     Network          Next Hop            Metric LocPrf Weight Path\n *>   1.1.1.0/24       1.1.1.1                  0             0 100 i\n *>i  6.6.6.0/24       5.5.5.5                  0    100      0 300 i\n 第一栏可能取值\n \t\t*：可用的路由（不一定是最优）\n    s：被抑制的路由条目，比如过了路由汇总抑制了明细\n    d：被惩罚的路由，在惩罚期结束前是不允许通告\n    h：被惩罚的路由，有历史信息，但可能没有最佳路由\n    r：路由没有被装进RIB表，例如由于AD等原因导致的\n    S：标识过期的路由\n第二栏可能取值\n\t\t>：最佳路由\n第三栏可能取值\n    从EBGP邻居获取则为空\n    从IBGP邻居获取则为i\nNetwork：网段\nNext Hop：吓一跳\nMetric：度量值\nLocPrf：本地优先级，从ebgp邻居学校的没有本地优先级\nWeight：权重\nPath：路径\n```\n# 水平分割原则\n\n- BGP是通过AS_PATH实现放环的，但是AS_PATH仅仅在离开AS后才会被更改，在AS内部IBGP邻居没有防环能力，为了防止环路出现，BGP路由器不会将从IBGP邻居学习过来的路由通告给自己其他IBGP邻居\n- 由于水平分割原则，在AS内部，需要保证全互联\n\n                        ![image.png](https://cdn.nlark.com/yuque/0/2020/png/500370/1596697535797-434ed1ea-9a46-4443-be53-8a3b69d93e1a.png#height=249&id=YnSTG&margin=%5Bobject%20Object%5D&name=image.png&originHeight=497&originWidth=1100&originalType=binary&ratio=1&size=36433&status=done&style=none&width=550)\n# BGP路由黑洞解决\n### 重发步bgp路由进入igp\n```html\n在R2和R5上进行重发步特定的路由条目\nR2\nroute-map b-o permit 10\n match ip address 1\n!\naccess-list 1 permit 1.1.1.0 0.0.0.255\n!\nrouter ospf 1\n redistribute bgp 200 subnets route-map b-o\nR5\nroute-map b-o permit 10\n match ip address 1\n!\naccess-list 1 permit 6.6.6.0 0.0.0.255\n!\nrouter ospf 1\n redistribute bgp 200 subnets route-map b-o\n ===============================================================\n 在R3 上检查路由表，发现多了两条OE2的路由条目\n R3#sh ip route\n      1.0.0.0/24 is subnetted, 1 subnets\nO E2     1.1.1.0 [110/1] via 192.168.23.2, 00:06:41, Ethernet0/0\n      2.0.0.0/32 is subnetted, 1 subnets\nO        2.2.2.2 [110/11] via 192.168.23.2, 00:11:15, Ethernet0/0\n      3.0.0.0/8 is variably subnetted, 2 subnets, 2 masks\nC        3.3.3.0/24 is directly connected, Loopback0\nL        3.3.3.3/32 is directly connected, Loopback0\n      4.0.0.0/32 is subnetted, 1 subnets\nO        4.4.4.4 [110/21] via 192.168.35.5, 00:11:15, Ethernet0/1\n                 [110/21] via 192.168.23.2, 00:11:15, Ethernet0/0\n      5.0.0.0/32 is subnetted, 1 subnets\nO        5.5.5.5 [110/11] via 192.168.35.5, 00:11:15, Ethernet0/1\n      6.0.0.0/24 is subnetted, 1 subnets\nO E2     6.6.6.0 [110/1] via 192.168.35.5, 00:05:36, Ethernet0/1\n      192.168.23.0/24 is variably subnetted, 2 subnets, 2 masks\nC        192.168.23.0/24 is directly connected, Ethernet0/0\nL        192.168.23.3/32 is directly connected, Ethernet0/0\nO     192.168.24.0/24 [110/20] via 192.168.23.2, 00:11:15, Ethernet0/0\n      192.168.35.0/24 is variably subnetted, 2 subnets, 2 masks\nC        192.168.35.0/24 is directly connected, Ethernet0/1\nL        192.168.35.3/32 is directly connected, Ethernet0/1\nO     192.168.45.0/24 [110/20] via 192.168.35.5, 00:11:15, Ethernet0/1\n ===============================================================\n在R1上ping6.6.6.6检查连通性\nR1#ping 6.6.6.6 source 1.1.1.1\nType escape sequence to abort.\nSending 5, 100-byte ICMP Echos to 6.6.6.6, timeout is 2 seconds:\nPacket sent with a source address of 1.1.1.1 \n!!!!!\nSuccess rate is 100 percent (5/5), round-trip min/avg/max = 1/1/1 ms\nR1#\n```\n### 全互联\n```html\n以R3的配置为例，AS200里每一台路由器（R2/R4/R5）都需要和其他路由器建立邻居\nR3#show run | sec bgp\nrouter bgp 200\n bgp log-neighbor-changes\n neighbor eagle peer-group\n neighbor eagle remote-as 200\n neighbor eagle update-source Loopback0\n neighbor eagle next-hop-self\n neighbor 2.2.2.2 peer-group eagle\n neighbor 4.4.4.4 peer-group eagle\n neighbor 5.5.5.5 peer-group eagle\n 在R3上检查路由表，发现成功学习6.6.6.0的路由条目，解决了路由黑洞\n R3#sh ip route bgp\n      1.0.0.0/24 is subnetted, 1 subnets\nB        1.1.1.0 [200/0] via 2.2.2.2, 00:04:18\n      6.0.0.0/24 is subnetted, 1 subnets\nB        6.6.6.0 [200/0] via 5.5.5.5, 00:01:58\n在R1上ping6.6.6.6检查连通性\nR1#ping 6.6.6.6 source 1.1.1.1\nType escape sequence to abort.\nSending 5, 100-byte ICMP Echos to 6.6.6.6, timeout is 2 seconds:\nPacket sent with a source address of 1.1.1.1 \n!!!!!\nSuccess rate is 100 percent (5/5), round-trip min/avg/max = 1/1/1 ms\n```\n### 路由反射器\n\n- 指定一台路由器为路由反射器\n- 其他所有路由器和路由反射器建立IBGP邻居\n- 当其他路由器有路由更新时会将更细腻的路由发给路由反射器，路由反射器会将消息全部告诉给其他IBGP邻居\n\n                    ![image.png](https://cdn.nlark.com/yuque/0/2020/png/500370/1596699223409-0c1e35d3-e7c0-4bcf-9ddf-3fc1baf4fa08.png#height=212&id=H3Gwn&margin=%5Bobject%20Object%5D&name=image.png&originHeight=424&originWidth=1008&originalType=binary&ratio=1&size=42472&status=done&style=none&width=504)\n```html\n选举R3作为路由反射器，R2/R4/R5都和R3建立IBGP理距\nR2#sh run | sec bgp\nrouter bgp 200\n bgp log-neighbor-changes\t\t\t\t\t\t\t\t\t\t\t# 开启邻居变化时日志显示，默认存在\n neighbor 3.3.3.3 remote-as 200\t\t\t\t\t\t\t\t# 指定邻居AS号\n neighbor 3.3.3.3 update-source Loopback0\t\t\t# 指定以环回接口进行建立邻居\n neighbor 3.3.3.3 next-hop-self\t\t\t\t\t\t\t\t# 指定跟新条目时下一条为自己\n ===============================================================\nR3#sh run | sec bgp\nrouter bgp 200\n bgp log-neighbor-changes\n neighbor eagle peer-group\n neighbor eagle remote-as 200\n neighbor eagle update-source Loopback0\n neighbor eagle route-reflector-client\n neighbor eagle next-hop-self\n neighbor 2.2.2.2 peer-group eagle\n neighbor 4.4.4.4 peer-group eagle\n neighbor 5.5.5.5 peer-group eagle\n===============================================================\nR4#sh run | sec bgp\nrouter bgp 200\n bgp log-neighbor-changes\n neighbor 3.3.3.3 remote-as 200\n neighbor 3.3.3.3 update-source Loopback0\n neighbor 3.3.3.3 next-hop-self\n =============================================================== \n R5#sh run | sec bgp\nrouter bgp 200\n bgp log-neighbor-changes\n neighbor 3.3.3.3 remote-as 200\n neighbor 3.3.3.3 update-source Loopback0\n neighbor 3.3.3.3 next-hop-self\n\n```\n# BGP常见属性\n\n- 公认属性（Well-Known）\n   - 公认强制属性Well-Known mandatory\n   - 公认自由决定属性Well-Known discretionary\n- 可选属性（Optional）\n   - 可选传递的Optional transitive\n   - 可选非传递的Optional non-transitive\n\n                ![image.png](https://cdn.nlark.com/yuque/0/2020/png/500370/1596700741233-c7e0c5d4-6130-4e30-8cad-d69ed1e8c004.png#height=352&id=jMIP4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=475&originWidth=810&originalType=binary&ratio=1&size=175199&status=done&style=none&width=601)\n### 权重（weight）\n\n- 在路由器本地配置，只提供本地路由策略，不会传播给任何bgp邻居\n- 范围：0-65535，越大越优先\n- 路由器本地事发的路径默认权重为32768，从其他bgp邻居学习到的为0\n### 本地优先级（local preference）\n\n- 公认自由决定属性\n- 告诉AS中的路由器，哪条路径是离开AS的首选路径\n- LP越高优先级越高\n- 只发送给IBGP邻居，不传递给EBGP邻居\n- 默认本地优先级为100\n### 拓扑\n                                ![image.png](https://cdn.nlark.com/yuque/0/2020/png/500370/1596701492921-8e684663-9ecb-49d7-b565-6b88247b50bf.png#height=398&id=AqF5b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=562&originWidth=601&originalType=binary&ratio=1&size=49781&status=done&style=none&width=426)\n```html\n基础配置\nR1#sh run | sec int\ninterface Loopback0\n ip address 1.1.1.1 255.255.255.0\ninterface Ethernet0/0\n ip address 192.168.12.1 255.255.255.0\ninterface Ethernet0/1\n ip address 192.168.13.1 255.255.255.0\nR2#sh run | sec int\ninterface Loopback0\n ip address 2.2.2.2 255.255.255.0\ninterface Ethernet0/0\n ip address 192.168.12.2 255.255.255.0\ninterface Ethernet0/1\n ip address 192.168.24.2 255.255.255.0\nR3#sh run | sec int\ninterface Loopback0\n ip address 3.3.3.3 255.255.255.0\ninterface Ethernet0/0\n ip address 192.168.13.3 255.255.255.0\ninterface Ethernet0/1\n ip address 192.168.35.3 255.255.255.0\nR4#sh run | sec int\ninterface Loopback0\n ip address 4.4.4.4 255.255.255.0\n ip ospf 1 area 0\ninterface Ethernet0/0\n ip address 192.168.34.4 255.255.255.0\ninterface Ethernet0/1\n ip address 192.168.45.4 255.255.255.0\n ip ospf 1 area 0\ninterface Ethernet0/2\n ip address 192.168.46.4 255.255.255.0\n ip ospf 1 area 0\nR5#show running-config | section int \ninterface Loopback0\n ip address 5.5.5.5 255.255.255.0\n ip ospf 1 area 0\ninterface Ethernet0/0\n ip address 192.168.35.5 255.255.255.0\ninterface Ethernet0/1\n ip address 192.168.45.5 255.255.255.0\n ip ospf 1 area 0\ninterface Ethernet0/2\n ip address 192.168.56.5 255.255.255.0\n ip ospf 1 area 0\nR6#sh run | sec int\ninterface Loopback0\n ip address 6.6.6.6 255.255.255.0\n ip ospf 1 area 0\ninterface Ethernet0/0\n ip address 192.168.46.6 255.255.255.0\n ip ospf 1 area 0\ninterface Ethernet0/1\n ip address 192.168.56.6 255.255.255.0\n ip ospf 1 area 0\n =============================================================== \n 配置BGP\n R1#sh run | sec route\nrouter bgp 100\n bgp log-neighbor-changes\n network 1.1.1.0 mask 255.255.255.0\n neighbor 2.2.2.2 remote-as 200\n neighbor 2.2.2.2 ebgp-multihop 255\n neighbor 2.2.2.2 update-source Loopback0\n neighbor 3.3.3.3 remote-as 300\n neighbor 3.3.3.3 ebgp-multihop 255\n neighbor 3.3.3.3 update-source Loopback0\nip route 2.2.2.2 255.255.255.255 192.168.12.2\nip route 3.3.3.3 255.255.255.255 192.168.13.3\nR2#sh run | sec route\nrouter bgp 200\n bgp log-neighbor-changes\n neighbor 1.1.1.1 remote-as 100\n neighbor 1.1.1.1 ebgp-multihop 255\n neighbor 1.1.1.1 update-source Loopback0\n neighbor 4.4.4.4 remote-as 400\n neighbor 4.4.4.4 ebgp-multihop 255\n neighbor 4.4.4.4 update-source Loopback0\nip route 1.1.1.1 255.255.255.255 192.168.12.1\nip route 4.4.4.4 255.255.255.255 192.168.24.4\nR3#sh run | sec route\nrouter bgp 300\n bgp log-neighbor-changes\n neighbor 1.1.1.1 remote-as 100\n neighbor 1.1.1.1 ebgp-multihop 255\n neighbor 1.1.1.1 update-source Loopback0\n neighbor 5.5.5.5 remote-as 400\n neighbor 5.5.5.5 ebgp-multihop 255\n neighbor 5.5.5.5 update-source Loopback0\nip route 1.1.1.1 255.255.255.255 192.168.13.1\nip route 5.5.5.5 255.255.255.255 192.168.35.5\nR4#sh run | sec route\nrouter ospf 1\nrouter bgp 400\n bgp log-neighbor-changes\n neighbor 2.2.2.2 remote-as 200\n neighbor 2.2.2.2 ebgp-multihop 255\n neighbor 2.2.2.2 update-source Loopback0\n neighbor 6.6.6.6 remote-as 400\n neighbor 6.6.6.6 update-source Loopback0\n neighbor 6.6.6.6 next-hop-self\nip route 2.2.2.2 255.255.255.255 192.168.24.2\nR5#sh run | sec route\nrouter ospf 1\nrouter bgp 400\n bgp log-neighbor-changes\n network 5.5.5.0\n neighbor 3.3.3.3 remote-as 300\n neighbor 3.3.3.3 ebgp-multihop 255\n neighbor 3.3.3.3 update-source Loopback0\n neighbor 6.6.6.6 remote-as 400\n neighbor 6.6.6.6 update-source Loopback0\n neighbor 6.6.6.6 next-hop-self\nip route 3.3.3.3 255.255.255.255 192.168.35.3\nrouter bgp 400\n bgp log-neighbor-changes\n network 6.6.6.0 mask 255.255.255.0\n neighbor 4.4.4.4 remote-as 400\n neighbor 4.4.4.4 update-source Loopback0\n neighbor 4.4.4.4 route-reflector-client\n neighbor 4.4.4.4 next-hop-self\n neighbor 5.5.5.5 remote-as 400\n neighbor 5.5.5.5 update-source Loopback0\n neighbor 5.5.5.5 route-reflector-client\n neighbor 5.5.5.5 next-hop-self\n =============================================================== \n在本地修改weight值\nR6#sh run\naccess-list 1 permit 1.1.1.0\nrouter bgp 400\n neighbor 5.5.5.5 weight 10\t\t\t\t# 这种方式会影响到所有来自邻居5.5.5.5的路由条目的权重\nrouter bgp 400\nroute-map R6 permit 10\n match ip address 1\n set weight 100\t\t\t\t\t\t\t\t\t\t# 这种方式可以针对具体的路由条目设置权重\n\n```\n","categories":[],"tags":[]},{"title":"Hello World","url":"/posts/16107/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","categories":[],"tags":[]},{"title":"取余符号","url":"/posts/38499/","content":"\n要用面值50、20、10、5和1元的钱凑成给定数目的钱，如何凑可以使钱的张数最少\n\n```C++\n#include<iostream>\nusing namespace std;\nint main()\n{\n\tint n;\n\tcout << \"请输入金额\";\n\tcin >> n;\n\tcout << n << \"元钱张数最少的方法\" << endl;\n\tcout << n / 50 << \"张50元\" << endl;\n\tcout << n % 50 / 20 << \"张20元\" << endl;\n\tcout << n % 50 % 20 / 10 << \"张10元\" << endl;\n\tcout << n % 50 % 20 % 10 / 5 << \"张5元\" << endl;\n\tcout << n % 50 % 20 % 10 % 5 << \"张1元\" << endl;\n\tsystem(\"pause\");\n\treturn 0;\n}\n```","categories":["C++"],"tags":["算法"]},{"title":"Hexo 主题 Mustom 使用指南（对应主题 1.0 版）","url":"/posts/55821/","content":"- 本主题[Mustom](//github.com/jinyaoMa/hexo-theme-mustom)是我参考了卡片式和窗口展示的样式设计的Hexo主题。\n- 本主题通过大量的replaceWith函数和PJAX来加载，而且用了Live2D的插件，初始加载时回流特别厉害。\n- 本主题可以衍生一个CSS的框架，但是作者本人目前还是在给每个组件都弄一个单独的样式表。\n- 本主题把各类资源文件都分门别类了，在以后添加内容方面应该还是较方便的。\n\n<!-- more -->\n\n# Hexo根目录结构\n\n**注：主题文件可以下载[本站](//github.com/jinyaoMa/ma-jinyao.cn)所有源代码后，通过复制粘贴`themes/mustom`文件夹获得，或者下载[Mustom](//github.com/jinyaoMa/hexo-theme-mustom)所有源代码获得**\n**注：以下文件及文件夹都是使用Mustom主题必要的结构**\n\n先来看看[本站](//github.com/jinyaoMa/ma-jinyao.cn)的根目录结构。\n\n```\n├─scaffolds    : 模板\n├─source       : 内容资源文件夹\n├─themes       : 下载的主题放这里\n├─package.json : 里面可以看我都用了什么没有魔改过的Hexo插件\n├─_config.yml  : 根配置文件\n```\n\n这就是一个普通Hexo建站的初始结构。这里主要讲下，**使用我的Mustom主题时，可以使用`scaffolds`里我的模板，里面包含了必要的front-matter变量。可以复制粘贴整个`scaffolds`文件去覆盖原本的文件夹。推荐按照[本站](//github.com/jinyaoMa/ma-jinyao.cn)里的`package.json`来安装依赖，因为基本上安装的依赖都是用于优化和兼容。可以复制粘贴本站的`package.json`去替换原本的文件，之后运行命令`npm i`安装依赖。之后所有的例子默认都使用了我的模板和依赖之后的操作。**\n\n# _config.yml根配置文件\n\n**注：使用本主题的你可以在上面添加变量和修改变量的值，但是最好不要删除某一个变量，你可以留个空字符串**\n**可以在复制粘贴以下配置之后，通过网站效果慢慢改**\n\n``` yml\n# Hexo Configuration\n## Docs: https://hexo.io/docs/configuration.html\n## Source: https://github.com/hexojs/hexo/\n\n# Site\ntitle: \"耀 の 个人网站 | Mark の Personal Website\"\ndescription: \"耀の个人网站, 耀的个人网站, Mark の Personal Website, Mark's Personal Website, 耀的部落阁, 耀の部落阁, jinyaoMa, Mustom, Hexo\"\nauthor: jinyaoMa ( 耀 / Mark )\nyear: 2019 # 建站年\n\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: https://ma-jinyao.cn\nroot: /\n\n# Directory\nsource_dir: source\npublic_dir: docs # 方便使用Github Page\ntag_dir: tags\narchive_dir: archives\ncategory_dir: categories\ncode_dir: code # markdown使用include_code标签\nskip_render:\n  - \"code/*.*\" # 排除code_dir\n  - \"extension/**/*.html\" # 排除extension\n  - \"*.html\" # 如果在在主目录source文件夹里放了搜索引擎验证的.html文件\n  - \"CNAME\" # 如果在在主目录source文件夹里放了CNAME文件\n\n# Writing\nnew_post_name: :title.md # File name of new posts\ndefault_layout: post\ntitlecase: false # Transform title into titlecase\nexternal_link:\n  enable: true # Open external links in new tab\n  field: site # Apply to the whole site\n  exclude: \"\"\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: false\nrelative_link: false\nfuture: true\nhighlight:\n  enable: true\n  line_number: true\n  auto_detect: false\n  tab_replace: \"  \"\n  wrap: true\n  hljs: false\n\n# Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: YYYY-MM-DD\ntime_format: HH:mm:ss\n## Use post's date for updated date unless set in front-matter\nuse_date_for_updated: false\n\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: mustom\n\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  - type: baidu_url_submitter\n  - type: git\n    repo:\n\nall_minifier: true # 如果装了 hexo-all-minifier\nmarkdown: # 如果换了原装 hexo-renderer-marked, 用了 hexo-renderer-markdown-it\n  render:\n    html: true\n    xhtmlOut: false\n    breaks: true\n    linkify: true\n    typographer: true\n    quotes: '“”‘’'\n  plugins:\n    - markdown-it-abbr\n    - markdown-it-footnote\n    - markdown-it-ins\n    - markdown-it-sub\n    - markdown-it-sup\n  anchors:\n    level: 1\n    collisionSuffix: 'v'\n    permalink: true\n    permalinkClass: headerlink\n    permalinkSide: 'left'\n    permalinkSymbol: ''\nnofollow: # 如果装了 hexo-filter-nofollow\n  enable: true\n  field: post\nsitemap: # 如果装了 hexo-generator-sitemap\n  path: sitemap.xml\n  rel: true\nautoprefixer: # 如果装了 hexo-autoprefixer\n  exclude:\n    - \"*.min.css\"\n  overrideBrowserslist:\n    - \"last 2 versions\"\nbabelify: # 如果装了 hexo-renderer-babelify + @babel/preset-env\n  presets:\n    - \"@babel/preset-env\"\n  sourceMaps: false\nmathjax: # 如果装了 hexo-filter-mathjax\n  tags: none # or 'ams' or 'all'\n  single_dollars: true # enable single dollar signs as in-line math delimiters\n  cjk_width: 0.9 # relative CJK char width\n  normal_width: 0.6 # relative normal (monospace) width\n\nignore:\n  - \"**/source/asset/js/common/*.js\" # 如果装了 hexo-renderer-babelify\n  - \"**/source/asset/js/part/*.js\" # 如果装了 hexo-renderer-babelify\n  - \"**/source/asset/js/plugin/!(L2Dwidget.0.min.js)\" # 如果装了 hexo-renderer-babelify\n\n# 百度主动推送\nbaidu_url_submit:\n  count: 1000 # 提交最新的一个链接\n  host: ma-jinyao.cn # 在百度站长平台中注册的域名\n  token: \"\" # 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!\n  path: baidu_urls.txt # 文本文档的地址， 新链接会保存在此文本文档里\n\nbaidu_translate: # 用于划词翻译组件\n  appid: \"\"\n  appkey: \"\"\n\nvaline: # 用于评论组件\n  appid: \"\"\n  appkey: \"\"\n\n# 搜索引擎验证\ngoogle_site_verification: \"\"\nbaidu_site_verification: \"\"\n```\n\n# themes/mustom目录结构\n\n接下来看看[themes/mustom](//github.com/jinyaoMa/ma-jinyao.cn/tree/master/themes/mustom)的目录结构。\n\n```\n├─_config.yml : 主题配置文件，改菜单、改图标、改皮肤、改音乐/一言组件配置、新增组件时涉及\n├─source : 主题资源文件夹\n|   ├─browser.ejs : 不用babelify时旧浏览器会重定向到这个页面\n|   ├─robots.txt\n|   ├─sw.tpl : pwa需要加载的service worker模板\n|   ├─asset\n|   |   ├─part : 所有组件模板文件放这\n|   |   |  ├─audioplayer.ejs\n|   |   |  ├─brand.ejs\n|   |   |  ├─codelib.ejs\n|   |   |  ├─comment.ejs\n|   |   |  ├─extension.ejs\n|   |   |  ├─footer.ejs\n|   |   |  ├─gallery.ejs\n|   |   |  ├─goingto.ejs\n|   |   |  ├─hitokoto.ejs\n|   |   |  ├─menus.ejs\n|   |   |  ├─page.ejs\n|   |   |  ├─panels.ejs\n|   |   |  ├─pather.ejs\n|   |   |  ├─post.ejs\n|   |   |  ├─recentposts.ejs\n|   |   |  ├─records.ejs\n|   |   |  ├─search.ejs\n|   |   |  ├─settings.ejs\n|   |   |  ├─sitename.ejs\n|   |   |  ├─skin.ejs\n|   |   |  ├─timeline.ejs\n|   |   |  ├─toc.ejs\n|   |   |  ├─translater.ejs\n|   |   |  ├─xaside.ejs\n|   |   |  ├─xcanvas.ejs\n|   |   |  ├─xdrawer.ejs\n|   |   |  └xsearch.ejs\n|   |   ├─live2d : Live2D的文件放这\n|   |   |   ├─haruto.model.json\n|   |   |   ├─haruto.physics.json\n|   |   |   ├─mtn\n|   |   |   |  ├─01.mtn\n|   |   |   |  ├─02.mtn\n|   |   |   |  ├─03.mtn\n|   |   |   |  ├─04.mtn\n|   |   |   |  ├─05.mtn\n|   |   |   |  ├─06.mtn\n|   |   |   |  ├─07.mtn\n|   |   |   |  ├─08.mtn\n|   |   |   |  ├─09.mtn\n|   |   |   |  └idle_02.mtn\n|   |   |   ├─moc\n|   |   |   |  ├─haruto.moc\n|   |   |   |  ├─haruto.2048\n|   |   |   |  |      └texture_00.png\n|   |   ├─lang : 所有的语言界面资源文件放这\n|   |   |  ├─en.yml : 英文\n|   |   |  └zh-cn.yml : 中文\n|   |   ├─js : 所有的JS资源文件放这\n|   |   | ├─main.js : 管理所有资源的加载和程序\n|   |   | ├─nomodule.js : 不使用babelify时用得到的旧浏览器重定向\n|   |   | ├─plugin : 所有第三方JS插件模块\n|   |   | |   ├─APlayer.min.js\n|   |   | |   ├─av-min.js\n|   |   | |   ├─evanyou.js\n|   |   | |   ├─L2Dwidget.0.min.js\n|   |   | |   ├─L2Dwidget.min.js\n|   |   | |   ├─md5.min.js\n|   |   | |   ├─Meting.min.js\n|   |   | |   ├─socialShare.min.js\n|   |   | |   └Valine.min.js\n|   |   | ├─part : 所有组件加载必要的模块\n|   |   | |  ├─audioplayer.js\n|   |   | |  ├─brand.js\n|   |   | |  ├─codelib.js\n|   |   | |  ├─comment.js\n|   |   | |  ├─extension.js\n|   |   | |  ├─footer.js\n|   |   | |  ├─gallery.js\n|   |   | |  ├─goingto.js\n|   |   | |  ├─hitokoto.js\n|   |   | |  ├─menus.js\n|   |   | |  ├─page.js\n|   |   | |  ├─panels.js\n|   |   | |  ├─pather.js\n|   |   | |  ├─post.js\n|   |   | |  ├─recentposts.js\n|   |   | |  ├─records.js\n|   |   | |  ├─search.js\n|   |   | |  ├─settings.js\n|   |   | |  ├─sitename.js\n|   |   | |  ├─skin.js\n|   |   | |  ├─timeline.js\n|   |   | |  ├─toc.js\n|   |   | |  ├─translater.js\n|   |   | |  ├─xaside.js\n|   |   | |  ├─xcanvas.js\n|   |   | |  ├─xdrawer.js\n|   |   | |  └xsearch.js\n|   |   | ├─common : 包含所有通用JS函数\n|   |   | |   ├─ajax.js\n|   |   | |   ├─api.js\n|   |   | |   ├─config.js\n|   |   | |   ├─fetch.js\n|   |   | |   ├─lang.js\n|   |   | |   ├─part.js\n|   |   | |   ├─storage.js\n|   |   | |   └util.js\n|   |   ├─img : 所有的固定图像资源文件放这\n|   |   |  ├─android-chrome-192x192.png\n|   |   |  ├─android-chrome-512x512.png\n|   |   |  ├─author.large.png\n|   |   |  ├─author.medium.png\n|   |   |  ├─author.small.png\n|   |   |  ├─by-nc-sa.svg\n|   |   |  ├─icon.large.png\n|   |   |  ├─icon.medium.png\n|   |   |  ├─icon.small.png\n|   |   |  ├─qf3cu.huaji.png\n|   |   |  ├─qf3cu.jpg\n|   |   |  ├─qf3cu.png\n|   |   |  ├─qf3cu.temp.bw.png\n|   |   |  ├─qf3cu.temp.png\n|   |   |  ├─qq.png\n|   |   |  ├─start.png\n|   |   |  ├─start.reverse.png\n|   |   |  └wechat.png\n|   |   ├─font : 所有的字体文件放这\n|   |   |  ├─fa-brands-400.eot\n|   |   |  ├─fa-brands-400.svg\n|   |   |  ├─fa-brands-400.ttf\n|   |   |  ├─fa-brands-400.woff\n|   |   |  ├─fa-brands-400.woff2\n|   |   |  ├─fa-regular-400.eot\n|   |   |  ├─fa-regular-400.svg\n|   |   |  ├─fa-regular-400.ttf\n|   |   |  ├─fa-regular-400.woff\n|   |   |  ├─fa-regular-400.woff2\n|   |   |  ├─fa-solid-900.eot\n|   |   |  ├─fa-solid-900.svg\n|   |   |  ├─fa-solid-900.ttf\n|   |   |  ├─fa-solid-900.woff\n|   |   |  ├─fa-solid-900.woff2\n|   |   |  ├─iconfont.eot\n|   |   |  ├─iconfont.svg\n|   |   |  ├─iconfont.ttf\n|   |   |  ├─iconfont.woff\n|   |   |  └SourceHanSansCN.otf\n|   |   ├─css : 所有的样式文件放这\n|   |   |  ├─style.styl : 引用了所有的样式\n|   |   |  ├─_plugin : 所有第三方样式插件\n|   |   |  |    ├─APlayer.min.css\n|   |   |  |    ├─fontawesome.min.css\n|   |   |  |    ├─github-markdown.min.css\n|   |   |  |    ├─highlight.styl\n|   |   |  |    └share.min.css\n|   |   |  ├─_part : 所有组件样式\n|   |   |  |   ├─audioplayer.styl\n|   |   |  |   ├─brand.styl\n|   |   |  |   ├─codelib.styl\n|   |   |  |   ├─comment.styl\n|   |   |  |   ├─extension.styl\n|   |   |  |   ├─footer.styl\n|   |   |  |   ├─gallery.styl\n|   |   |  |   ├─goingto.styl\n|   |   |  |   ├─hitokoto.styl\n|   |   |  |   ├─menus.styl\n|   |   |  |   ├─page.styl\n|   |   |  |   ├─panels.styl\n|   |   |  |   ├─pather.styl\n|   |   |  |   ├─post.styl\n|   |   |  |   ├─recentposts.styl\n|   |   |  |   ├─records.styl\n|   |   |  |   ├─search.styl\n|   |   |  |   ├─settings.styl\n|   |   |  |   ├─sitename.styl\n|   |   |  |   ├─skin.styl\n|   |   |  |   ├─timeline.styl\n|   |   |  |   ├─toc.styl\n|   |   |  |   ├─translater.styl\n|   |   |  |   ├─xaside.styl\n|   |   |  |   ├─xcanvas.styl\n|   |   |  |   ├─xdrawer.styl\n|   |   |  |   └xsearch.styl\n|   |   |  ├─_common : 包含所有页面的通用样式\n|   |   |  |    ├─color.styl : 所有的受皮肤影响的颜色配置\n|   |   |  |    ├─dimension.styl : 所有的固定距离、固定值等配置\n|   |   |  |    └layout.styl : 所有页面通用样式，主要包含“m-”开头的主模板样式\n├─scripts : 主题预处理脚本文件夹\n|    ├─$filter.js\n|    ├─$helper.js\n|    ├─$renderer.js\n|    ├─renderer\n|    |    ├─$partplus.js\n|    |    └$template.js\n|    ├─plugin : 放改过的预处理时用到的第三方插件\n|    |   ├─pangunode.js\n|    |   ├─toc.js\n|    |   ├─hexo-generator-restful\n|    |   |           ├─index.js\n|    |   |           ├─lib\n|    |   |           |  └generator.js\n|    |   ├─hexo-abbrlink\n|    |   |       ├─index.js\n|    |   |       ├─lib\n|    |   |       |  ├─crc16.js\n|    |   |       |  ├─crc32.js\n|    |   |       |  ├─logic.js\n|    |   |       |  └model.js\n|    ├─helper : 放预处理渲染生成期间用到的函数\n|    |   ├─$count.js\n|    |   ├─$css.js\n|    |   ├─$encode.js\n|    |   ├─$forIn.js\n|    |   ├─$gallery.js\n|    |   ├─$js.js\n|    |   ├─$min2read.js\n|    |   ├─$mjs.js\n|    |   ├─$nomjs.js\n|    |   ├─$word4post.js\n|    |   └$word4site.js\n├─layout : 主题预处理页面模板文件夹\n|   ├─archive.ejs : 管理所有归档页面头部涉及的数据\n|   ├─index.ejs : 管理首页面头部涉及的数据\n|   ├─page.ejs : 管理所有单独页面头部涉及的数据\n|   ├─post.ejs : 管理所有文章页面头部涉及的数据\n|   ├─_partial\n|   |    └frame.ejs : 网页模板，增减改组件和修改头部模板时涉及\n```\n\n## 普通使用主题时涉及的文件及文件夹\n\n```\n├─_config.yml : 主题配置文件，改菜单、改图标、改皮肤、改音乐/一言组件配置、新增组件时涉及\n├─source : 主题资源文件夹\n|   ├─asset\n|   |   ├─part : 所有组件模板文件放这\n|   |   ├─lang : 所有的语言界面资源文件放这\n|   |   |  ├─en.yml : 英文\n|   |   |  └zh-cn.yml : 中文\n|   |   ├─js : 所有的JS资源文件放这\n|   |   | ├─main.js : 管理所有资源的加载和程序\n|   |   | ├─part : 所有组件加载必要的模块\n|   |   ├─css : 所有的样式文件放这\n|   |   |  ├─style.styl : 引用了所有的样式\n|   |   |  ├─_part : 所有组件样式\n├─layout : 主题预处理页面模板文件夹\n|   ├─_partial\n|   |    └frame.ejs : 网页模板，增减改组件和修改头部模板时涉及\n```\n\n# source目录结构\n\n再来看看[source](//github.com/jinyaoMa/ma-jinyao.cn/tree/master/source)的目录结构。\n\n```\n├─CNAME : 锁定github pages域名定向\n├─_posts : 所有的文章\n|   ├─Gallery-Post-Not-Supported.md\n|   ├─Hello-Hexo.md\n|   ├─Helpful-Links.md\n|   ├─HTTP是什么？.md\n|   ├─Markdown-Basic-Syntax.md\n|   ├─Oracle-SQL-Basic-Usage.md\n|   ├─TCP-IP是什么？.md\n|   ├─主题hexo-theme-mustom使用指南.md\n|   ├─旧版日记仿markdown编译代码.md\n|   ├─测试区2048JS代码.md\n|   └网易云音乐歌单JS音乐播放器JS代码.md\n├─resume : 这是个“简历小贴士”单页面\n|   └index.md\n├─records : 这是个“记录”单页面\n|    ├─content.yml : 记录组件加载时从这里读取数据\n|    └index.md\n├─library : 这是个“代码库”单页面\n|    └index.md\n├─letter : 这是个“求职信小贴士”单页面\n|   └index.md\n├─gallery : 这是个“图库”单页面\n|    ├─FaceQ1583444636773.png\n|    ├─http-request-example.jpg\n|    ├─http-request-format.png\n|    ├─http-response-example.jpg\n|    ├─http-response-format.png\n|    ├─index.md\n|    ├─tcp-ip-ipv6-prefix.jpg\n|    ├─tcp-ip-router-network.jpg\n|    ├─tcp-ip-router-subnet.jpg\n|    ├─wallpaper-2311325.jpg\n|    ├─wallpaper-2572384.jpg\n|    ├─wallpaper-878514.jpg\n|    ├─yao2048-0.jpg\n|    └yaoplayer-0.jpg\n├─extension : 这个是本站左下角的扩展功能\n|     ├─content.yml : 扩展组件加载时从这里读取数据\n|     ├─test : “测试”扩展\n|     ├─resume : “简历生成”扩展\n|     ├─palette : “图像颜色提取”扩展\n|     ├─letter : “求职信”扩展\n├─code : 所有使用Hexo标签“include_code”的代码文件都放这\n├─about : 这是个“关于”单页面\n|   └index.md\n```\n\n# 新建单页面例子\n\n**注：需要我的scaffolds/page.md模板为前提**\n\n假如我要新建一个“友链”单页面，我需要运行新建命令：\n\n``` bash\nhexo new page \"links\"\n```\n\n运行命令后得到以下新目录结构\n\n```\n├─_posts\n├─resume\n├─records\n├─links : 新“友链”单页面\n|   └index.md : 模板生成的index.md\n├─library\n├─letter\n├─gallery\n├─extension\n├─code\n├─about\n```\n\n如何修改`links/index.md`可以参考[about/index.md](//raw.githubusercontent.com/jinyaoMa/ma-jinyao.cn/master/source/about/index.md)\n\n## 添加菜单项目\n\n在主题配置`_config.yml`中，按格式新增`menus`下的项目\n\n``` yml\nmenus:\n  main: # 项目组\n    home: # 项目\n      url: / # 项目链接\n      icon: '<i class=\"fas fa-home fa-fw\"></i>' # 项目图标\n    archive: # 项目\n      url: /archives/ # 项目链接\n      icon: '<i class=\"fas fa-archive fa-fw\"></i>' # 项目图标\n    about: # 项目\n      url: /about/ # 项目链接\n      icon: '<i class=\"fas fa-user fa-fw\"></i>' # 项目图标\n    links: # 新项目 <----------------------------------------------------\n      url: /links/  # 新项目链接 <----------------------------------------\n      icon: '<i class=\"fas fa-link fa-fw\"></i>' # 新项目图标 <------------\n```\n\n接下来，在主题`source/asset/lang`文件夹中的`.yml`语言文件新增`menus`下的项目\n\n``` yml\nmenus:\n  main: # 对应_config.yml中的项目组\n    caption: 本站 # 项目组名称\n    items: # 对应_config.yml中的项目\n      home: 首页 # 项目名称\n      archive: 归档 # 项目名称\n      about: 关于 # 项目名称\n      links: 友链 # 新项目名称 <-----------------------------------------\n```\n\n# 新建文章例子\n\n**注：需要我的scaffolds/post.md模板为前提**\n\n假如我要新建一个“HTTP是什么？”文章，我需要运行新建命令：\n\n``` bash\nhexo new \"HTTP是什么？\"\n```\n\n运行命令后得到以下新目录结构\n\n```\n├─_posts\n|   └HTTP是什么？.md : 新“HTTP是什么？”文章\n├─resume\n├─records\n├─links\n├─library\n├─letter\n├─gallery\n├─extension\n├─code\n├─about\n```\n\n打开`HTTP是什么？.md`，可以看到front-matter中没有abbrlink，没有关系，这是自动生成。**如果文章里使用了MathJax，需要设置`mathjax: true`。**\n\n``` yml\n---\ntitle: HTTP是什么？\ncategories:\n  - - null # 分类设置\ntags:\n  - null # 标签设置\nmathjax: false\ndate: 2020-04-10 14:15:34\nupdated: 2020-04-10 14:15:34\n---\n```\n\n# 添加组件例子\n\n假如我要在“友链”单页面里添加一个像\"记录\"单页面下的记录组件，命名为`links`组件：\n\n**首先，在Hexo根目录下`source/links`文件夹建立一个`content.yml`用以记录友链，里面的内容可以是这样的：**\n\n``` yml source/links/content.yml\n# 友链模板\n- name: jinyaoMa\n  site: //ma-jinyao.cn\n  avatar: //ma-jinyao.cn/asset/img/author.medium.png\n# 其他友链\n- name: Test\n  site: //baidu.com\n  avatar: \"\"\n\n# ...以此类推\n```\n\n**然后，在主题目录`themes/mustom`新建和修改以下必要的文件：**\n\n```\n├─_config.yml : 添加需要的图标\n├─source\n|   ├─asset\n|   |   ├─part\n|   |   |  └links.ejs : 必要“组件模板”\n|   |   ├─lang\n|   |   |  ├─en.yml : 添加需要的英文文本\n|   |   |  └zh-cn.yml : 添加需要的中文文本\n|   |   ├─js\n|   |   | ├─part\n|   |   | |  └links.js : 必要“JS加载模块”\n|   |   ├─css\n|   |   |  ├─_part\n|   |   |  |   └links.styl : 必要“组件样式”\n```\n\n`links.ejs`：可以参照[asset/part/records.ejs](//raw.githubusercontent.com/jinyaoMa/ma-jinyao.cn/master/themes/mustom/source/asset/part/records.ejs)组件模板，刚开始可以只有以下部分：\n\n``` html asset/part/links.ejs\n<div class=\"p-links\"><!-- 注意类名 -->\n  <div class=\"p-links-caption\"><!-- 窗口标题部分 -->\n    <%- theme.links.icon %><!-- 窗口标题图标 -->\n    <span data-lang=\"links.caption\"><!-- 加载语言文件中links.caption的字符串 --></span>\n  </div>\n<div>\n```\n\n在`_config.yml`中添加以下代码：\n\n``` yml\nlinks:\n  icon: '<i class=\"fas fa-link fa-fw\"></i>'\n```\n\n在`en.yml`和`zh-cn.yml`中添加以下代码：\n\n``` yml en.yml\nlinks:\n  caption: LINKS\n```\n\n``` yml zh-cn.yml\nlinks:\n  caption: 友链\n```\n\n`links.js`：可以参照[asset/js/part/records.js](//raw.githubusercontent.com/jinyaoMa/ma-jinyao.cn/master/themes/mustom/source/asset/js/part/records.js)加载模块，刚开始可以只有以下部分：\n\n``` js asset/js/part/links.js\nimport part from \"../common/part.js\";\nlet tag = 'links'; // 注意标签名\nlet element = null;\nconst init = (params, callback) => {\n  part(tag, el => {\n    element = el;\n    document.querySelector(tag).replaceWith(element);\n    callback && callback(element);\n  });\n};\nexport default {\n  tag,\n  init\n};\n```\n\n`links.styl`：可以参照[asset/css/_part/records.styl](//raw.githubusercontent.com/jinyaoMa/ma-jinyao.cn/master/themes/mustom/source/asset/css/_part/records.styl)组件样式，刚开始可以什么样式都没有。\n\n**完成必要文件的新建之后，就要把这个组件加载到页面上，需要修改一下文件：**\n\n在Hexo根目录`source/links/index.md`里面的front-matter中标记这个组件。\n\n``` yml source/links/index.md\n---\ntitle: links\nlayout: page\nname: links\nparts: \n  - page\n  - links # 标记组件\n---\n```\n\n在`themes/mustom`主题目录中`source/asset/css/style.styl`引用`links.styl`。\n\n``` styl \n// 文件末尾添加\n@import '_part/links'\n```\n\n在`themes/mustom`主题目录中`source/asset/js/main.js`对号插入以下代码：\n\n``` js\n// 头部所有import下面\nimport links from './part/links.js';\n\n/* Ctrl+F 查找 “Extra Operations”，在“Extra Operations”下添加代码加载组件到“links”单页面 */\n// Extra Operations\nif (/^\\/(links)\\//.test(pathname())) {\n  ajax({\n    url: `/links/content.json`, // content.yml 预编译成的JSON文件，友链的记录文件\n    method: 'get',\n    dataType: 'json',\n    success(data) {\n      parts.includes('links') && links.init({\n        data\n      }, el => {\n        checklist.links = true;\n        progress.step(stepping);\n      });\n    }\n  });\n}\n```\n\n在`themes/mustom`主题目录中`layout/_partial/frame.ejs`中`div.m-content`插入组件标签`<links></links>`。\n\n**通过以上步骤就能把组件添加到单页面“友链”中**\n\n# 删除单页面组件\n\n想要停用某个单页面组件只要在单页面所属`source/YourPage/index.md`里面的front-matter中注释掉组件标记即可，例如：\n\n``` yml\n---\ntitle: links\nlayout: page\nname: links\nparts: \n  - page\n  # - links # 注释掉组件标记\n---\n```\n\n**_我这个主题所用技术都是比较野生和混杂，不懂可以Github Issue我，也可以百度。自己研究一下熟悉之后就简单了，因为来来去去也就几个地方，只是代码分得较细，改动过程鼠标可能比较累。_**","categories":["Hexo"],"tags":["Mustom"]},{"title":"12","url":"/posts/54465/","content":"","categories":["Linux"],"tags":["基础知识"]}]